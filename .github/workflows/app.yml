# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Datamine

on:
  workflow_dispatch:
  schedule:
      - cron:  '*/10 * * * *'

jobs:
  dal_test:
    name: DAL_TEST
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    - name: Check for updates in DAL_TEST
      run: |
        python check.py dal_test
    - name: New update! Download files and decrypt in DAL_TEST
      if: ${{ success() }}
      run: |
        pip install -r requirements.txt
        python main.py dal_test
    - name: Push updates
      run: |
        git stash
        git pull
        git stash apply
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add dal_test
        git commit -m "Automated Datamining"
        git push origin master
    - name: Trigger GitHub Pages rebuild
      run: |
        curl --fail --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/pages/builds \
          --header "Authorization: Bearer $USER_TOKEN"
      env:
        USER_TOKEN: ${{ secrets.USER_TOKEN }}
    - name: Send Discord Webhook
      env: 
        BOT_URL: ${{ secrets.DAL_TEST }}
      run: |
        python discord.py dal_test "$BOT_URL"

  dal_experience:
    name: DAL_EXPERIENCE
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    - name: Check for updates in DAL_EXPERIENCE
      run: |
        python check.py dal_experience
    - name: New update! Download files and decrypt in DAL_EXPERIENCE
      if: ${{ success() }}
      run: |
        pip install -r requirements.txt
        python main.py dal_experience
    - name: Push updates
      run: |
        git stash
        git pull
        git stash apply
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add dal_experience
        git commit -m "Automated Datamining"
        git push origin master
    - name: Trigger GitHub Pages rebuild
      run: |
        curl --fail --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/pages/builds \
          --header "Authorization: Bearer $USER_TOKEN"
      env:
        USER_TOKEN: ${{ secrets.USER_TOKEN }}
    - name: Send Discord Webhook
      env: 
        BOT_URL: ${{ secrets.DAL_EXPERIENCE }}
      run: |
        python discord.py dal_experience "$BOT_URL" 
